

<dependency>
  <groupId>io.socket</groupId>
  <artifactId>socket.io-client</artifactId>
  <version>2.0.1</version>
</dependency>




****************

import io.socket.client.IO;
import io.socket.client.Socket;
import io.socket.emitter.Emitter;
import org.json.JSONArray;
import org.json.JSONObject;

public class SocketClient {

    public static void main(String[] args) {
        try {
            IO.Options options = new IO.Options();
            options.transports = new String[]{"websocket"};
            options.auth = new JSONObject()
                .put("username", "employees.consultor")
                .put("password", "gVh6#1TSyPt2");

            Socket socket = IO.socket("http://socket-handle-tests.amaditaplayground.com:30008", options);

            socket.on(Socket.EVENT_CONNECT, new Emitter.Listener() {
                @Override
                public void call(Object... args) {
                    System.out.println("âœ… Conectado al servidor");

                    JSONObject payload = new JSONObject()
                        .put("requestNumber", 99009901)
                        .put("accountNumber", 0)
                        .put("patientNumber", 0)
                        .put("cedula", "402-1115792-6")
                        .put("email", "angel.perez@amadita.com")
                        .put("isCompleted", false)
                        .put("totalProcedures", 20)
                        .put("totalPendingProcedures", 20)
                        .put("locationId", "2023")
                        .put("patientId", JSONObject.NULL)
                        .put("resultNumber", 99009901)
                        .put("origen", "SOCKET-CORE4ALL");

                    JSONArray tests = new JSONArray();
                    tests.put(new JSONObject()
                        .put("priority", 0)
                        .put("flagInfectiousDisease", 0)
                        .put("averageDate", "2021-09-19")
                        .put("averageHour", "10:59:00.0000000")
                        .put("flagAbnormal", 0)
                        .put("procNumber", 1)
                        .put("description", "Blood")
                        .put("result", "base64")
                        .put("hl7Result", "lorem")
                        .put("statusRequest", "C")
                        .put("statusResult", "C"));

                    tests.put(new JSONObject()
                        .put("priority", 0)
                        .put("flagInfectiousDisease", 0)
                        .put("averageDate", "2021-09-19")
                        .put("averageHour", "10:59:00.0000000")
                        .put("flagAbnormal", 0)
                        .put("procNumber", 2)
                        .put("description", "X-Ray")
                        .put("result", "base64")
                        .put("hl7Result", "lorem")
                        .put("statusRequest", "P")
                        .put("statusResult", "P"));

                    payload.put("tests", tests);

                    socket.emit("send order", payload);
                    System.out.println("ðŸ“¤ Evento 'send order' enviado");
                }
            });

            socket.on("respuesta", new Emitter.Listener() {
                @Override
                public void call(Object... args) {
                    System.out.println("ðŸ“© Respuesta recibida:");
                    System.out.println(args[0]);
                }
            });

            socket.on(Socket.EVENT_DISCONNECT, new Emitter.Listener() {
                @Override
                public void call(Object... args) {
                    System.out.println("ðŸ”Œ Desconectado del servidor");
                }
            });

            socket.connect();

        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
