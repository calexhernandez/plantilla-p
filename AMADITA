// Obtener el XML del mensaje
var xml = new XML(msg);  // 'msg' es el mensaje entrante en XML
var root = xml;
var obrList = root.getElementsByTagName("OBR");

// Crear el JSON principal
var resultado = {
    order_id: "",
    patient_id: "",
    profiles: []
};

// Obtener ID de orden y paciente
var pid = root.getElementsByTagName("PID")[0];
if (pid) {
    resultado.patient_id = pid.getElementsByTagName("PID.3")[0]?.text() || "";
}

var orc = root.getElementsByTagName("ORC")[0];
if (orc) {
    resultado.order_id = orc.getElementsByTagName("ORC.2")[0]?.text() || "";
}

// Procesar los OBR
for (var i = 0; i < obrList.length(); i++) {
    var obr = obrList[i];
    var profileName = obr.getElementsByTagName("OBR.4")[0]?.text() || "Perfil sin nombre";

    var profile = {
        name: profileName,
        tests: []
    };

    // Agregar OBX que están después de este OBR y antes del siguiente OBR
    var current = obr;
    var sibling = current.nextSibling();

    while (sibling != null && sibling.name() != "OBR") {
        if (sibling.name() == "OBX") {
            var testName = sibling.getElementsByTagName("OBX.3")[0]?.text() || "Prueba sin nombre";
            var value = sibling.getElementsByTagName("OBX.5")[0]?.text() || "";

            profile.tests.push({
                name: testName,
                value: value
            });
        }
        sibling = sibling.nextSibling();
    }

    if (profile.tests.length > 0) {
        resultado.profiles.push(profile);
    }
}

// Convertir a JSON para salida
return JSON.stringify(resultado, null, 2);
