var xml = msg;
// lo que recibo
var orcList = xml..ORC;
var obxList = xml..OBX;
var obrList = xml..OBR;


var obxIndex = 0; // para recorrer OBX global
var obxI = 0; // para crear los OBX de TMP

//recorre total de ORC 3 por ejemplo

//+++++++++++ Carga pruebas ++++++++++++++++++++++++++++++++++

var pruebas = fn_cargar_pruebas_detalle('C:\\util\\examenes_laboratorio.csv');
//logger.info('Claves cargadas: ' + Object.keys(pruebas));

/*
var datos = pruebas['CNTP'];
if (datos) {
    logger.info("Nombre examen: " + datos.nombre_examen);
    logger.info("Unidades: " + datos.unidades);
    logger.info("Rango: " + datos.rangoinicio + " - " + datos.rangofin);
}
*/

// Acceder a un dato:
if (pruebas['CNTP']) {
    var valor = pruebas['CNTP'].valor;
    var id2 = pruebas['CNTP'].id2;
    
	var CNTP = pruebas['CNTP'];
	var CNTPISI = pruebas['CNTPISI'];
	var CNTPINR = pruebas['CNTPINR'];
	var CNTPCONTROL = pruebas['CNTPCONTROL'];
	
	var CNTTP = pruebas['CNTTP'];
	var CNTTPCONTROL = pruebas['CNTTPCONTROL'];
	
	var CNTT = pruebas['CNTT'];
	var CNTTCONTROL = pruebas['CNTTCONTROL'];
	
	var CNFIB = pruebas['CNFIB'];
	var CNFIBCONTROL = pruebas['CNFIBCONTROL'];
	
	var CNDD = pruebas['CNDD'];
	var CNDDCONTROL = pruebas['CNDDCONTROL'];
	
	var ISI = pruebas['ISI'];


}


//+++++++++++++++++++++++++++++++++++++++++++++++++++++  

for(var i = 0; i < orcList.length(); i++){
	//orc y obr solo estara una vez y obx puede haber mas dentro de un orc
	orc = orcList[i];
	obr = obrList[i];	

//creo xml / voy con la variable que va a recibir 
            if (typeof(tmp) == 'xml') {
                if (typeof(tmp['ORC'][0]) == 'undefined') {
                    createSegment('ORC', tmp, 0);
                }
                if (typeof(tmp['OBR'][i]) == 'undefined') {
                    createSegment('OBR', tmp, i);
                }
                                       
              
            } else {
                if (typeof(tmp) == 'undefined') {
                    tmp = {};
                }
                if (typeof(tmp['ORC']) == 'undefined') {
                    tmp['ORC'] = [];
                }
                if (typeof(tmp['OBR']) == 'undefined') {
                    tmp['OBR'] = [];
                }
                if (typeof(tmp['ORC'][0]) == 'undefined') {
                    tmp['ORC'][0] = {};
                }
                if (typeof(tmp['OBR'][i]) == 'undefined') {
                    tmp['OBR'][i] = {};
                }
                
                 
            }
            
            if(i==0){

          var fechaOriginal = obr['OBR.8']['OBR.8.1'].toString();
		
		// Validación simple por si viene vacío
		if (fechaOriginal && fechaOriginal.length >= 12) {
		    var fechaObr9 = fechaOriginal.substring(0, 12);
		    //logger.info("Fecha convertida: " + fechaConvertida);
		}
            //ORC | asigna solo un ORC al principio
            tmp['ORC'][i]['ORC.1']['ORC.1.1'] = 'NW';         
            tmp['ORC'][i]['ORC.2']['ORC.2.1'] = orc['ORC.4']['ORC.4.1'].toString();
            tmp['ORC'][i]['ORC.3']['ORC.3.1'] = orc['ORC.9']['ORC.9.1'].toString();
            //tmp['ORC'][i]['ORC.5']['ORC.5.1'] = orc['ORC.5']['ORC.5.1'].toString();
            tmp['ORC'][i]['ORC.5']['ORC.5.1'] = "CM";
            tmp['ORC'][i]['ORC.9']['ORC.9.1'] = fechaObr9;
		  }
	
	orc = orcList[i];
	obr = obrList[i];	
	obx = obxList[i];
	//logger.info('INDICE'+i )
	//logger.info("orc" +orcList.length());
	//logger.info("obr" +obrList.length());
	//logger.info("obx" +obxList.length());
	//contador de OBX
	
	var cOBX = 1;
	while (obxIndex < obxList.length()) {
	
	   var obx = obxList[obxIndex];
        // Procesar el OBX actual
        var testCode = obx['OBX.3']['OBX.3.1'].toString();

        var fechaOriginal = obx['OBX.14']['OBX.14.1'].toString();
		
		// Validación simple por si viene vacío
		if (fechaOriginal && fechaOriginal.length >= 12) {
		    var fechaConvertida = fechaOriginal.substring(0, 12);
		    //logger.info("Fecha convertida: " + fechaConvertida);
		}

        // Mapa de valores para los códigos de prueba
        var mapaValores = {
        '148': CNTP.valor,
        '149': CNTTP.valor,
        '157': CNFIB.valor,
        '150': CNTT.valor,
        '180': CNDD.valor,
        '188': CNDD.valor
        
        };

        var cn = mapaValores[testCode] !== undefined ? mapaValores[testCode] : null;

	   // Mapa de valores para los códigos de prueba
        var mapaIds = {
        '148': CNTP.id2,
        '149': CNTTP.id2,
        '157': CNFIB.id2,
        '150': CNTT.id2,
        '180': CNDD.id2,
        '188': CNDD.id2
        
        };

        var idP = mapaIds[testCode] !== undefined ? mapaIds[testCode] : null;


	   // Mapa de valores para los códigos de prueba
        var mapaCns = {
        '148': CNTPCONTROL.id2,
        '149': CNTTPCONTROL.id2,
        '157': CNFIBCONTROL.id2,
        '150': CNTTCONTROL.id2,
        '180': CNDDCONTROL.id2,
        '188': CNDDCONTROL.id2
        
        };

        var idC = mapaCns[testCode] !== undefined ? mapaCns[testCode] : null;


	
        //logger.info('OBX index: ' + obxIndex);

        // Si no es el último ORC, verifica si el OBX ya pertenece al siguiente ORC
        if (i < orcList.length() - 1) {
            if (obx.childIndex() >= orcList[i + 1].childIndex()) {
                //logger.info('Fin de OBX para ORC #' + i);
                break; // Salir del while, los OBX siguientes ya son del próximo ORC
            }
        }
		//creo xml
            if (typeof(tmp) == 'xml') {                
                if (typeof(tmp['OBX'][obxI]) == 'undefined') {
                    createSegment('OBX', tmp, obxI);
                    obxI++;
                    createSegment('OBX', tmp, obxI);
                    obxI++;
                    createSegment('OBX', tmp, obxI);
                    if(testCode == '148'){
                    	obxI++;
                    	createSegment('OBX', tmp, obxI);
                    	obxI++;
                    	createSegment('OBX', tmp, obxI);
                    }
                }                         
            } else {               
                if (typeof(tmp['OBX'][obxI]) == 'undefined') {
                    tmp['OBX'][obxI] = {};
                    obxI++;
                    tmp['OBX'][obxI] = {};
                    obxI++;
                    tmp['OBX'][obxI] = {};
                    if(testCode == '148'){
                    	obxI++;
                    	tmp['OBX'][obxI] = {};
                    	obxI++;
                    	tmp['OBX'][obxI] = {};
                    }
                    
                }                  
            }
     

//********************************** ***************** ***************** ***************** *****************  */
var valorStr = obx['OBX.5']['OBX.5.1'].toString();
var rangoStr = obx['OBX.7']['OBX.7.1'].toString();

if (rangoStr.indexOf('-') !== -1) {
    var partes = rangoStr.split('-');

    // Elimina espacios y convierte a número
    var rangoIni = parseFloat(partes[0].trim().replace(",", "."));
    var rangoFin = parseFloat(partes[1].trim().replace(",", "."));
    var valor = parseFloat(valorStr.trim().replace(",", "."));
	logger.info("obxI original es:" + (obxI-2));
    if (!isNaN(rangoIni) && !isNaN(rangoFin) && !isNaN(valor)) {
        if (valor >= rangoIni && valor <= rangoFin) {

        	if(testCode == '148'){
            //si es 148 son mas OBX
            logger.info('✅ Valor dentro del rango normal: ' + valor);
            logger.info('Rango: ' + rangoIni + '-' + rangoFin);
		    tmp['OBX'][obxI-4]['OBX.1']['OBX.1.1'] = cOBX;
		    tmp['OBX'][obxI-4]['OBX.2']['OBX.2.1'] = "ST";
            tmp['OBX'][obxI-4]['OBX.3']['OBX.3.1'] = obx['OBX.3']['OBX.3.1'].toString();
            tmp['OBX'][obxI-4]['OBX.4']['OBX.4.1'] = '1'
            tmp['OBX'][obxI-4]['OBX.4']['OBX.4.2'] = 'NORMAL'+'|'
            
            cOBX++;
          
        	}else{
        		//sigue indice obxI normal
        
            logger.info('✅ Valor dentro del rango normal: ' + valor);
            logger.info('Rango: ' + rangoIni + '-' + rangoFin);
		    tmp['OBX'][obxI-2]['OBX.1']['OBX.1.1'] = cOBX;
		    tmp['OBX'][obxI-2]['OBX.2']['OBX.2.1'] = "ST";
            tmp['OBX'][obxI-2]['OBX.3']['OBX.3.1'] = obx['OBX.3']['OBX.3.1'].toString();
            tmp['OBX'][obxI-2]['OBX.4']['OBX.4.1'] = '1'
            tmp['OBX'][obxI-2]['OBX.4']['OBX.4.2'] = 'NORMAL'+'|'
            

            cOBX++;        	
        	}
        	 
        } else {
        	//cuando es anormal
        	if(testCode == '148'){
            logger.info('⚠️ Valor fuera de rango: ' + valor);
            logger.info('Rango: ' + rangoIni + '-' + rangoFin);
            tmp['OBX'][obxI-4]['OBX.1']['OBX.1.1'] = cOBX;
            tmp['OBX'][obxI-4]['OBX.2']['OBX.2.1'] = "ST";
            tmp['OBX'][obxI-4]['OBX.3']['OBX.3.1'] = obx['OBX.3']['OBX.3.1'].toString();
            tmp['OBX'][obxI-4]['OBX.4']['OBX.4.1'] = '3'
            tmp['OBX'][obxI-4]['OBX.4']['OBX.4.2'] = 'ANORMAL'+'|'
            
            cOBX++;
                  	
        	}else{
            //indice de obx normal
		    logger.info('⚠️ Valor fuera de rango: ' + valor);
            logger.info('Rango: ' + rangoIni + '-' + rangoFin);
            tmp['OBX'][obxI-2]['OBX.1']['OBX.1.1'] = cOBX;
            tmp['OBX'][obxI-2]['OBX.2']['OBX.2.1'] = "ST";
            tmp['OBX'][obxI-2]['OBX.3']['OBX.3.1'] = obx['OBX.3']['OBX.3.1'].toString();
            tmp['OBX'][obxI-2]['OBX.4']['OBX.4.1'] = '3'
            tmp['OBX'][obxI-2]['OBX.4']['OBX.4.2'] = 'ANORMAL'+'|'
            
            cOBX++;
        		
        	}
  
        }
    } else {
        logger.warn('❗ Error al convertir a número. Verifica los datos.');
        logger.info('Valor: ' + valorStr + ', Rango: ' + rangoStr);
    }
} else {
    logger.warn('❗ Rango no contiene guión para separar: ' + rangoStr);
}


//********************************** ***************** ***************** ***************** *****************  */
//obx que viene del driver
if(testCode == '148'){
        //logger.info('OBX para ORC #' + i + ': ' + testCode);
        //tmp['OBX'][obxIndex]['OBX.1']['OBX.1.1'] = cOBX;
        //logger.info("obxI-3 " + (obxI-3));
        //logger.info("obxI-3 " + (obxI-3));
        //logger.info("obxI " + obxI);
        
        tmp['OBX'][obxI-3]['OBX.1']['OBX.1.1'] = cOBX;
        tmp['OBX'][obxI-3]['OBX.2']['OBX.2.1'] = "ST";
        tmp['OBX'][obxI-3]['OBX.3']['OBX.3.1'] = idP;
        tmp['OBX'][obxI-3]['OBX.3']['OBX.3.2'] = obx['OBX.3']['OBX.3.2'].toString();
        tmp['OBX'][obxI-3]['OBX.4']['OBX.4.1'] = "";
        tmp['OBX'][obxI-3]['OBX.5']['OBX.5.1'] = obx['OBX.5']['OBX.5.1'].toString();
        tmp['OBX'][obxI-3]['OBX.6']['OBX.6.1'] = obx['OBX.6']['OBX.6.1'].toString();
        tmp['OBX'][obxI-3]['OBX.7']['OBX.7.1'] = obx['OBX.7']['OBX.7.1'].toString();
        tmp['OBX'][obxI-3]['OBX.8']['OBX.8.1'] = "";
        tmp['OBX'][obxI-3]['OBX.11']['OBX.11.1'] = "F";
        tmp['OBX'][obxI-3]['OBX.14']['OBX.14.1'] = fechaConvertida;
        tmp['OBX'][obxI-3]['OBX.15']['OBX.15.1'] = "";
        cOBX++;
}else{
      
        //logger.info('OBX para ORC #' + i + ': ' + testCode);
        //tmp['OBX'][obxIndex]['OBX.1']['OBX.1.1'] = cOBX;
        logger.info("obxI-3 " + (obxI-3));
        logger.info("obxI-3 " + (obxI-3));
        logger.info("obxI " + obxI);
        
        tmp['OBX'][obxI-1]['OBX.1']['OBX.1.1'] = cOBX;
        tmp['OBX'][obxI-1]['OBX.2']['OBX.2.1'] = "ST";
        tmp['OBX'][obxI-1]['OBX.3']['OBX.3.1'] = idP;
        tmp['OBX'][obxI-1]['OBX.3']['OBX.3.2'] = obx['OBX.3']['OBX.3.2'].toString();
        tmp['OBX'][obxI-1]['OBX.4']['OBX.4.1'] = "";
        tmp['OBX'][obxI-1]['OBX.5']['OBX.5.1'] = obx['OBX.5']['OBX.5.1'].toString();
        tmp['OBX'][obxI-1]['OBX.6']['OBX.6.1'] = obx['OBX.6']['OBX.6.1'].toString();
        tmp['OBX'][obxI-1]['OBX.7']['OBX.7.1'] = obx['OBX.7']['OBX.7.1'].toString();
        tmp['OBX'][obxI-1]['OBX.8']['OBX.8.1'] = "";
        tmp['OBX'][obxI-1]['OBX.11']['OBX.11.1'] = "F";
        tmp['OBX'][obxI-1]['OBX.14']['OBX.14.1'] = fechaConvertida;
        tmp['OBX'][obxI-1]['OBX.15']['OBX.15.1'] = "";
        cOBX++;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++


//********************************** ***************** ***************** ***************** *****************  */
//control 

	var INR;

	INR = Math.pow((12 / CNTP.valor), 1);  // O simplemente (12 / CNTP);
	INR = parseFloat(INR.toFixed(2));


    

    if(testCode == '148'){
	//lleva INR
	    //logger.info('OBX para ORC #' + i + ': ' + testCode);
        //tmp['OBX'][obxIndex]['OBX.1']['OBX.1.1'] = cOBX;
        tmp['OBX'][obxI-2]['OBX.1']['OBX.1.1'] = cOBX;
        tmp['OBX'][obxI-2]['OBX.2']['OBX.2.1'] = "NW";
        tmp['OBX'][obxI-2]['OBX.3']['OBX.3.1'] = CNTPINR.id2;
        tmp['OBX'][obxI-2]['OBX.3']['OBX.3.2'] = "INR";
        tmp['OBX'][obxI-2]['OBX.4']['OBX.4.1'] = "Instrumento";
        tmp['OBX'][obxI-2]['OBX.5']['OBX.5.1'] = INR;
        tmp['OBX'][obxI-2]['OBX.6']['OBX.6.1'] = "";
        tmp['OBX'][obxI-2]['OBX.7']['OBX.7.1'] = "";
        tmp['OBX'][obxI-2]['OBX.8']['OBX.8.1'] = "";
        tmp['OBX'][obxI-2]['OBX.11']['OBX.11.1'] = "F";
        tmp['OBX'][obxI-2]['OBX.14']['OBX.14.1'] = fechaConvertida;
        tmp['OBX'][obxI-2]['OBX.15']['OBX.15.1'] = "";
	   cOBX++;	
    }else{
        //logger.info('OBX para ORC #' + i + ': ' + testCode);
        //tmp['OBX'][obxIndex]['OBX.1']['OBX.1.1'] = cOBX;
        tmp['OBX'][obxI]['OBX.1']['OBX.1.1'] = cOBX;
        tmp['OBX'][obxI]['OBX.2']['OBX.2.1'] = "NW";
        tmp['OBX'][obxI]['OBX.3']['OBX.3.1'] = idC;
        tmp['OBX'][obxI]['OBX.3']['OBX.3.2'] = "CONTROL";
        tmp['OBX'][obxI]['OBX.4']['OBX.4.1'] = "Instrumento";
        tmp['OBX'][obxI]['OBX.5']['OBX.5.1'] = cn;
        tmp['OBX'][obxI]['OBX.6']['OBX.6.1'] = "";
        tmp['OBX'][obxI]['OBX.7']['OBX.7.1'] = "";
        tmp['OBX'][obxI]['OBX.8']['OBX.8.1'] = "";
        tmp['OBX'][obxI]['OBX.11']['OBX.11.1'] = "F";
        tmp['OBX'][obxI]['OBX.14']['OBX.14.1'] = fechaConvertida;
        tmp['OBX'][obxI]['OBX.15']['OBX.15.1'] = "";
        cOBX++;	  
    }
       

//+++++++++++++++++++++++++++++++++++++++++++++++++++

//++++++++++++++++++++++++++++++++++++++++++++++++++++
//valor ISI

if(testCode == '148'){

     //logger.info('OBX para ORC #' + i + ': ' + testCode);
        //tmp['OBX'][obxIndex]['OBX.1']['OBX.1.1'] = cOBX;
        tmp['OBX'][obxI-1]['OBX.1']['OBX.1.1'] = cOBX;
        tmp['OBX'][obxI-1]['OBX.2']['OBX.2.1'] = "NW";
        tmp['OBX'][obxI-1]['OBX.3']['OBX.3.1'] = CNTPISI.id2;
        tmp['OBX'][obxI-1]['OBX.3']['OBX.3.2'] = "ISI";
        tmp['OBX'][obxI-1]['OBX.4']['OBX.4.1'] = "Instrumento";
        tmp['OBX'][obxI-1]['OBX.5']['OBX.5.1'] = ISI.valor;
        tmp['OBX'][obxI-1]['OBX.6']['OBX.6.1'] = "";
        tmp['OBX'][obxI-1]['OBX.7']['OBX.7.1'] = "";
        tmp['OBX'][obxI-1]['OBX.8']['OBX.8.1'] = "";
        tmp['OBX'][obxI-1]['OBX.11']['OBX.11.1'] = "F";
        tmp['OBX'][obxI-1]['OBX.14']['OBX.14.1'] = fechaConvertida;
        tmp['OBX'][obxI-1]['OBX.15']['OBX.15.1'] = "";
        cOBX++;
}

//+++++++++++++++++++++++++++++++++++++++++++++++++++

//++++++++++++++++++++++++++++++++++++++++++++++++++++
//valor control

if(testCode == '148'){



     //logger.info('OBX para ORC #' + i + ': ' + testCode);
        //tmp['OBX'][obxIndex]['OBX.1']['OBX.1.1'] = cOBX;
        tmp['OBX'][obxI]['OBX.1']['OBX.1.1'] = cOBX;
        tmp['OBX'][obxI]['OBX.2']['OBX.2.1'] = "NW";
        tmp['OBX'][obxI]['OBX.3']['OBX.3.1'] = CNTPCONTROL.id2;
        tmp['OBX'][obxI]['OBX.3']['OBX.3.2'] = "CONTROL";
        tmp['OBX'][obxI]['OBX.4']['OBX.4.1'] = "Instrumento";
        tmp['OBX'][obxI]['OBX.5']['OBX.5.1'] = CNTP.valor;
        tmp['OBX'][obxI]['OBX.6']['OBX.6.1'] = "";
        tmp['OBX'][obxI]['OBX.7']['OBX.7.1'] = "";
        tmp['OBX'][obxI]['OBX.8']['OBX.8.1'] = "";
        tmp['OBX'][obxI]['OBX.11']['OBX.11.1'] = "F";
        tmp['OBX'][obxI]['OBX.14']['OBX.14.1'] = fechaConvertida;
        tmp['OBX'][obxI]['OBX.15']['OBX.15.1'] = "";
        cOBX++;
}

//+++++++++++++++++++++++++++++++++++++++++++++++++++


//usuario validador
//var usuarioValidador  = obx['OBX.15']['OBX.15.1'].toString()

var fechaOriginal = "";

fechaOriginal = obx['OBX.14']['OBX.14.1'].toString();

// Validación simple por si viene vacío
if (fechaOriginal && fechaOriginal.length >= 12) {
var horaValidacion = fechaOriginal.substring(0, 12);
//logger.info("Fecha convertida: " + fechaConvertida);
}

//logger.info(obx['OBX.15']['OBX.15.1'].toString())
//logger.info(usuarioValidador)
//var resultado = buscarUsuarioDatosEnCSV(usuarioValidador, 'C:\\util\\usuariosValidan.csv');


//if (resultado !== null) {
    var usuarioHIS = obx['OBX.15']['OBX.15.1'].toString();
    //var nombre = resultado[1];
    //var apellido = resultado[2];

    //logger.info("Usuario HIS: " + usuarioHIS);
    //logger.info("Nombre: " + nombre);
    //logger.info("Apellido: " + apellido);
    
//} else {
    //logger.info("Usuario no encontrado");
    //var usuarioHIS = "USUARIO";
    //var nombre = "USUARIO";
    //var apellido = "USUARIO";
//}

    if(i==0){
        tmp['ORC'][i]['ORC.12']['ORC.12.1'] = usuarioHIS;
        tmp['ORC'][i]['ORC.12']['ORC.12.2'] = "";
    }
                //OBR ************************
            var fechaOriginal = "";

            fechaOriginal = obr['OBR.8']['OBR.8.1'].toString();
		
		  // Validación simple por si viene vacío
		  if (fechaOriginal && fechaOriginal.length >= 12) {
		    var fechaObr8 = fechaOriginal.substring(0, 12);
		    //logger.info("Fecha convertida: " + fechaConvertida);
		  }
            tmp['OBR'][i]['OBR.1']['OBR.1.1'] = obr['OBR.1']['OBR.1.1'].toString();
            //id Detalle HIS
            var codigo = obr['OBR.2']['OBR.2.1'].toString()
            var partes = codigo.split("-")
            var idDetalle = partes[0]
            tmp['OBR'][i]['OBR.2']['OBR.2.1'] = idDetalle
		  tmp['OBR'][i]['OBR.4']['OBR.4.1'] = obr['OBR.4']['OBR.4.1'].toString();
		  tmp['OBR'][i]['OBR.4']['OBR.4.2'] = obr['OBR.4']['OBR.4.2'].toString();
		  tmp['OBR'][i]['OBR.8']['OBR.8.1'] = fechaObr8;
		  var plantilla = partes[1]
		  tmp['OBR'][i]['OBR.10']['OBR.10.1'] = plantilla	
    		  tmp['OBR'][i]['OBR.16']['OBR.16.1'] = usuarioHIS;
    		  tmp['OBR'][i]['OBR.16']['OBR.16.2'] = "";
    		  tmp['OBR'][i]['OBR.22']['OBR.22.1'] = horaValidacion	 
		  tmp['OBR'][i]['OBR.25']['OBR.25.1'] = obr['OBR.25']['OBR.25.1'].toString();
		  //********************************


    

    cOBX++;

//++++++++++++++++++++++++++++++++++++++++++++++++++++
        obxI++;	 
        obxIndex++;
	}
		  
}
