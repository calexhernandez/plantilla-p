C:\Users\pv-admin-promed02\.jdks\ms-17.0.15\bin\java.exe "-javaagent:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2025.1.1.1\lib\idea_rt.jar=62521" -Dfile.encoding=UTF-8 -classpath C:\Users\pv-admin-promed02\IdeaProjects\checker\target\classes;C:\Users\pv-admin-promed02\.m2\repository\org\java-websocket\Java-WebSocket\1.5.3\Java-WebSocket-1.5.3.jar;C:\Users\pv-admin-promed02\.m2\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar org.example.WebSocketChecker
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
Error al conectarunknown scheme: http
conexion cerradaunknown scheme: http



package org.example;

import org.java_websocket.client.WebSocketClient;
import org.java_websocket.handshake.ServerHandshake;

import java.net.URI;
import java.nio.charset.StandardCharsets;
import java.util.Base64;
import java.util.concurrent.CountDownLatch;



public class WebSocketChecker extends WebSocketClient{

    private static CountDownLatch latch;

    private static final String WEBSOCKET_URL = "http://socket-handle-tests.amaditaplayground.com:30008";
    private static final String USERNAME = "employees.consultor";
    private static final String PASSWORD = "gVh6#1TSyPt2";


    public WebSocketChecker(URI serverUri, String username, String password){
        super(serverUri);
        if(username != null && !username.isEmpty()){
            String basicAuth = "Basic"+ Base64.getEncoder().encodeToString((username+":"+password).getBytes(StandardCharsets.UTF_8));
            this.addHeader("Authorization",basicAuth);
        }

    }

    @Override
    public void onOpen(ServerHandshake handshake){
        System.out.println("Conexion Exitosa");
        latch.countDown();
    }

    @Override
    public void onMessage(String message){}

    @Override
    public void onClose(int code, String reason, boolean remote){
        System.out.println("conexion cerrada"+reason);
    }

    @Override
    public void onError(Exception ex){
        System.out.println("Error al conectar"+ ex.getMessage());
    }

    public static void main(String[] args){

        try{
        latch = new CountDownLatch(1);
        WebSocketChecker client = new WebSocketChecker(new URI(WEBSOCKET_URL),USERNAME,PASSWORD);
        client.connect();
        latch.await();
        client.close();
        }catch (Exception e){
            System.out.println("Exception"+e.getMessage());
        }
    }




}
