var IO = Packages.io.socket.client.IO;
var Socket = Packages.io.socket.client.Socket;
var EmitterListener = Packages.io.socket.emitter.Emitter.Listener;
var JSONObject = Packages.org.json.JSONObject;

// ‚úÖ Autenticaci√≥n para el evento 'auth' (si se necesita)
var auth = new JSONObject();
auth.put("username", "employees.consultor");
auth.put("password", "gVh6#1TSyPt2");

// ‚úÖ Opciones de conexi√≥n
var options = new IO.Options();
options.forceNew = true;
options.reconnection = true;
options.reconnectionAttempts = 5;
options.timeout = 5000;

// ‚úÖ Agrega credenciales en la query string
options.query = "username=employees.consultor&password=gVh6#1TSyPt2";

// ‚úÖ Transportes (websocket)
var transports = java.lang.reflect.Array.newInstance(java.lang.String, 1);
transports[0] = "websocket";
options.transports = transports;

// ‚úÖ Conectar al WebSocket
var socket = IO.socket("http://socket-handle-tests.amaditaplayground.com:30008", options);

// ‚úÖ Evento conectado
socket.on("connect", new EmitterListener({
    call: function(args) {
        logger.info("‚úÖ Conectado al WebSocket");
        socket.emit("auth", auth.toString());
    }
}));

// ‚úÖ Evento de respuesta
socket.on("sent order", new EmitterListener({
    call: function(args) {
        var response = args[0];
        logger.info("üì• Respuesta recibida: " + response.toString());
        socket.disconnect();
    }
}));

// ‚úÖ Error de conexi√≥n
socket.on("connect_error", new EmitterListener({
    call: function(args) {
        var err = args[0];
        logger.error("‚ùå Error de conexi√≥n: " + err.toString());
    }
}));

// ‚úÖ Iniciar conexi√≥n
socket.connect();
